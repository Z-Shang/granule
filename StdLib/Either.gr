------
--- Module: Either
--- Description: Coproducts
--- Authors: Dominic Orchard, Vilem-Benjamin Liepelt
--- License: BSD3
--- Copyright: (c) Authors 2019
--- Issue-tracking: https://github.com/dorchard/granule/issues
--- Repository: https://github.com/dorchard/granule
------

data Either a b where Left a | Right b

-- TODO: latest version can generalise this to `c : k, k : Semiring`
pushEither : forall {a : Type, b : Type, c : Nat} . {c <= 1} =>
             (Either a b) [c] -> Either (a [c]) (b [c])
pushEither [Left x]  = Left [x];
pushEither [Right y] = Right [y]

pullEither : forall {a : Type, b : Type, c : Nat}
        . Either (a [c]) (b [c]) -> (Either a b) [c]
pullEither (Left [y])  = [Left y];
pullEither (Right [y]) = [Right y]
