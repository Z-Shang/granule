data Vec (n : Nat) t where
  Nil  : Vec 0 t;
  Cons : t -> Vec n t -> Vec (n+1) t

append : forall { a : Type, n m : Nat } . Vec (n + 1) a -> Vec (m + 1) a -> Vec ((m + n) + 2) a
append (Cons xs0 xs1) (Cons ys0 ys1) = {! xs1 ys1 !}
